
app.use('/api/sauces', (req, res, next) => {
  const sauces = [
    {
        _id: 'sauce_1',
        title: 'Bolognaise',
        image: 'https://www.cuisineetsentiments.com/images/spaghetti-bolognaise_5.jpg',
        compostion: 'viande de boeuf, tomates, ail, oignons',
        userId: 'MCB_1233'
    },
    {
       _id: 'sauce_2',
       title: 'Carbonara',
       image: 'https://img.taste.com.au/-m9mNTLu/taste/2016/11/creamy-bacon-carbonara-98843-1.jpeg',
       composition: 'crème fraiche, oignons, lardons',
       userId: 'SQ_3321'
    },
];
res.status(200).json(sauces);
});


app.post('/api/sauces',(req, res, next) => {
  const thing = new Thing ({
     ...req.body
  });
  thing.save()
  .then(() => res.status(201).json({ message: 'Sauce enregistrée !'}))
  .catch(error => res.status(400).json({ error}));
    });
  
  app.post('/api/auth/signup', (req, res, next) => {
  const authorisation = [
   {
    email : 'email',
    password :'password'
   }
  ]
   });
  
  
  app.get('/api/sauces/:id', (req, res, next) => {
    Thing.findOne({ _id: req.params.id })
      .then(thing => res.status(200).json(thing))
      .catch(error => res.status(404).json({ error }));
  });
  
  app.get/*use*/('/api/sauces', (req, res, next) => {
    Thing.find()
      .then(things => res.status(200).json(things))
      .catch(error => res.status(400).json({ error }));
  });     

 // "mongoose": "^0.0.1-security",


 const sauceSchema = mongoose.Schema({ //créer un schéma de données
  userId: { type: String, required: true },
  name: { type: String, required: true },
  manufacturer: { type: String, required: true },
  description: { type: String, required: true },
  mainPepper: { type: String, required: true },
  imageUrl: { type: String },
  heat: { type: Number, required: true },
  likes: { type: Number, required: true, default: 0 },
  dislikes: { type: Number, required: true, default: 0 },
  usersLiked: { type: Array, required:true , default: [] },
  usersDisliked: { type: Array, required: true, default: [] }
});